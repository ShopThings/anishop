<?php

namespace Database\Seeders;

use App\Enums\Gates\RolesEnum;
use App\Models\AddressUser;
use App\Models\User;
use Illuminate\Database\Seeder;

class UserAutogeneratedSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        $roles = collect(RolesEnum::getAssignableAdminRoles());

        $users = User::factory()->count(10)->unverified()->notAdmin()->create();
        $users->each(function (User $user) {
            AddressUser::factory()->count(mt_rand(0, 4))->onUser($user)->create();
            $user->assignRole([RolesEnum::USER->value]);
        });

        $users = User::factory()->count(10)->unverified()->admin()->create();
        $users->each(function (User $user) use ($roles) {
            AddressUser::factory()->count(mt_rand(0, 4))->onUser($user)->create();
            $user->assignRole(array_map(fn($item) => $item->value, $roles->random(mt_rand(1, $roles->count() - 1))->toArray()));
        });

        $users = User::factory()->count(25)->notAdmin()->create();
        $users->each(function (User $user) {
            AddressUser::factory()->count(mt_rand(0, 4))->onUser($user)->create();
            $user->assignRole([RolesEnum::USER->value]);
        });

        $users = User::factory()->count(25)->admin()->create();
        $users->each(function (User $user) use ($roles) {
            AddressUser::factory()->count(mt_rand(0, 4))->onUser($user)->create();
            $user->assignRole(array_map(fn($item) => $item->value, $roles->random(mt_rand(1, $roles->count() - 1))->toArray()));
        });
    }
}
